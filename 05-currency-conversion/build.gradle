plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.palantir.docker' version '0.36.0'
}

group = 'hodlene.k8s'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.1")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    //  Slueth was removed and moved to Micrometer
    implementation 'io.micrometer:micrometer-registry-prometheus:latest.release'

    //  Actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    //  OpenFeign
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    runtimeOnly 'com.h2database:h2'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Define the tag here
def dockerImgName = "moon1z10/k8s-learning:${project.name}-${project.version}"
docker {
    println("gradle docker build start = ${dockerImgName}")
    name dockerImgName
    files tasks.bootJar.outputs.files
    buildArgs(['JAR_FILE': tasks.bootJar.outputs.files.singleFile.name])
}

// Create a task for pushing the Docker image
tasks.register('pushDockerImage') {
    exec {
        commandLine 'docker', 'push', dockerImgName
    }
}